### YamlMime:ManagedReference
items:
- uid: Lionk.Notification.NotificationService
  commentId: T:Lionk.Notification.NotificationService
  id: NotificationService
  parent: Lionk.Notification
  children:
  - Lionk.Notification.NotificationService.AddChannels(Lionk.Notification.IChannel[])
  - Lionk.Notification.NotificationService.AddNotifiers(Lionk.Notification.INotifier[])
  - Lionk.Notification.NotificationService.Channels
  - Lionk.Notification.NotificationService.EditNotificationHistory(Lionk.Notification.NotificationHistory)
  - Lionk.Notification.NotificationService.GetNotificationByGuid(System.Guid)
  - Lionk.Notification.NotificationService.GetNotifications
  - Lionk.Notification.NotificationService.GetUnreadNotificationCount
  - Lionk.Notification.NotificationService.MapNotifierToChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  - Lionk.Notification.NotificationService.NotificationSent
  - Lionk.Notification.NotificationService.NotifierChannels
  - Lionk.Notification.NotificationService.Notifiers
  - Lionk.Notification.NotificationService.RemoveChannel(Lionk.Notification.IChannel)
  - Lionk.Notification.NotificationService.RemoveNotifier(Lionk.Notification.INotifier)
  - Lionk.Notification.NotificationService.SaveNotificationHistory(Lionk.Notification.Notification)
  - Lionk.Notification.NotificationService.Send(Lionk.Notification.Notification)
  - Lionk.Notification.NotificationService.UnmapNotifierFromChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  - Lionk.Notification.NotificationService.WhoUseThisChannel(Lionk.Notification.IChannel)
  langs:
  - csharp
  - vb
  name: NotificationService
  nameWithType: NotificationService
  fullName: Lionk.Notification.NotificationService
  type: Class
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: NotificationService
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 9
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: this class implements the way notifications are saved.
  example: []
  syntax:
    content: public static class NotificationService
    content.vb: Public Module NotificationService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lionk.Notification.NotificationService.NotificationSent
  commentId: E:Lionk.Notification.NotificationService.NotificationSent
  id: NotificationSent
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: NotificationSent
  nameWithType: NotificationService.NotificationSent
  fullName: Lionk.Notification.NotificationService.NotificationSent
  type: Event
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: NotificationSent
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 26
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: This event is raised when a notification is sent.
  example: []
  syntax:
    content: public static event EventHandler<NotificationEventArgs>? NotificationSent
    return:
      type: System.EventHandler{Lionk.Notification.Event.NotificationEventArgs}
    content.vb: Public Shared Event NotificationSent As EventHandler(Of NotificationEventArgs)
- uid: Lionk.Notification.NotificationService.Channels
  commentId: P:Lionk.Notification.NotificationService.Channels
  id: Channels
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: NotificationService.Channels
  fullName: Lionk.Notification.NotificationService.Channels
  type: Property
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: Channels
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 35
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Gets the list of all the channels.
  example: []
  syntax:
    content: public static ReadOnlyCollection<IChannel> Channels { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Lionk.Notification.IChannel}
    content.vb: Public Shared ReadOnly Property Channels As ReadOnlyCollection(Of IChannel)
  overload: Lionk.Notification.NotificationService.Channels*
- uid: Lionk.Notification.NotificationService.NotifierChannels
  commentId: P:Lionk.Notification.NotificationService.NotifierChannels
  id: NotifierChannels
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: NotifierChannels
  nameWithType: NotificationService.NotifierChannels
  fullName: Lionk.Notification.NotificationService.NotifierChannels
  type: Property
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: NotifierChannels
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 47
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Gets a Dictionary that maps the Notifier name with multiple channels.
  example: []
  syntax:
    content: public static ReadOnlyDictionary<Guid, List<IChannel>> NotifierChannels { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.Guid,System.Collections.Generic.List{Lionk.Notification.IChannel}}
    content.vb: Public Shared ReadOnly Property NotifierChannels As ReadOnlyDictionary(Of Guid, List(Of IChannel))
  overload: Lionk.Notification.NotificationService.NotifierChannels*
- uid: Lionk.Notification.NotificationService.Notifiers
  commentId: P:Lionk.Notification.NotificationService.Notifiers
  id: Notifiers
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: Notifiers
  nameWithType: NotificationService.Notifiers
  fullName: Lionk.Notification.NotificationService.Notifiers
  type: Property
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: Notifiers
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 59
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Gets get the list of all the notifiers.
  example: []
  syntax:
    content: public static ReadOnlyCollection<INotifier> Notifiers { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Lionk.Notification.INotifier}
    content.vb: Public Shared ReadOnly Property Notifiers As ReadOnlyCollection(Of INotifier)
  overload: Lionk.Notification.NotificationService.Notifiers*
- uid: Lionk.Notification.NotificationService.AddChannels(Lionk.Notification.IChannel[])
  commentId: M:Lionk.Notification.NotificationService.AddChannels(Lionk.Notification.IChannel[])
  id: AddChannels(Lionk.Notification.IChannel[])
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: AddChannels(params IChannel[])
  nameWithType: NotificationService.AddChannels(params IChannel[])
  fullName: Lionk.Notification.NotificationService.AddChannels(params Lionk.Notification.IChannel[])
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: AddChannels
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 76
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: This method adds channels to the list of channels if they are not already in the list.
  example: []
  syntax:
    content: public static void AddChannels(params IChannel[] channels)
    parameters:
    - id: channels
      type: Lionk.Notification.IChannel[]
      description: The channels to add.
    content.vb: Public Shared Sub AddChannels(ParamArray channels As IChannel())
  overload: Lionk.Notification.NotificationService.AddChannels*
  nameWithType.vb: NotificationService.AddChannels(ParamArray IChannel())
  fullName.vb: Lionk.Notification.NotificationService.AddChannels(ParamArray Lionk.Notification.IChannel())
  name.vb: AddChannels(ParamArray IChannel())
- uid: Lionk.Notification.NotificationService.AddNotifiers(Lionk.Notification.INotifier[])
  commentId: M:Lionk.Notification.NotificationService.AddNotifiers(Lionk.Notification.INotifier[])
  id: AddNotifiers(Lionk.Notification.INotifier[])
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: AddNotifiers(params INotifier[])
  nameWithType: NotificationService.AddNotifiers(params INotifier[])
  fullName: Lionk.Notification.NotificationService.AddNotifiers(params Lionk.Notification.INotifier[])
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: AddNotifiers
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 98
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: This method adds notifiers to the list of notifiers if they are not already in the list.
  example: []
  syntax:
    content: public static void AddNotifiers(params INotifier[] notifiers)
    parameters:
    - id: notifiers
      type: Lionk.Notification.INotifier[]
      description: The notifiers to add.
    content.vb: Public Shared Sub AddNotifiers(ParamArray notifiers As INotifier())
  overload: Lionk.Notification.NotificationService.AddNotifiers*
  nameWithType.vb: NotificationService.AddNotifiers(ParamArray INotifier())
  fullName.vb: Lionk.Notification.NotificationService.AddNotifiers(ParamArray Lionk.Notification.INotifier())
  name.vb: AddNotifiers(ParamArray INotifier())
- uid: Lionk.Notification.NotificationService.EditNotificationHistory(Lionk.Notification.NotificationHistory)
  commentId: M:Lionk.Notification.NotificationService.EditNotificationHistory(Lionk.Notification.NotificationHistory)
  id: EditNotificationHistory(Lionk.Notification.NotificationHistory)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: EditNotificationHistory(NotificationHistory)
  nameWithType: NotificationService.EditNotificationHistory(NotificationHistory)
  fullName: Lionk.Notification.NotificationService.EditNotificationHistory(Lionk.Notification.NotificationHistory)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: EditNotificationHistory
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 118
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Edit a notification in history.
  example: []
  syntax:
    content: public static void EditNotificationHistory(NotificationHistory notificationHistory)
    parameters:
    - id: notificationHistory
      type: Lionk.Notification.NotificationHistory
      description: The notification history to edit.
    content.vb: Public Shared Sub EditNotificationHistory(notificationHistory As NotificationHistory)
  overload: Lionk.Notification.NotificationService.EditNotificationHistory*
- uid: Lionk.Notification.NotificationService.GetNotificationByGuid(System.Guid)
  commentId: M:Lionk.Notification.NotificationService.GetNotificationByGuid(System.Guid)
  id: GetNotificationByGuid(System.Guid)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: GetNotificationByGuid(Guid)
  nameWithType: NotificationService.GetNotificationByGuid(Guid)
  fullName: Lionk.Notification.NotificationService.GetNotificationByGuid(System.Guid)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetNotificationByGuid
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 126
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Get a notification by its unique identifier.
  example: []
  syntax:
    content: public static NotificationHistory? GetNotificationByGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
      description: the unique identifier of the notification.
    return:
      type: Lionk.Notification.NotificationHistory
      description: The notification with the specified unique identifier.
    content.vb: Public Shared Function GetNotificationByGuid(guid As Guid) As NotificationHistory
  overload: Lionk.Notification.NotificationService.GetNotificationByGuid*
- uid: Lionk.Notification.NotificationService.GetNotifications
  commentId: M:Lionk.Notification.NotificationService.GetNotifications
  id: GetNotifications
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: GetNotifications()
  nameWithType: NotificationService.GetNotifications()
  fullName: Lionk.Notification.NotificationService.GetNotifications()
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetNotifications
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 132
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Get all the notifications saved.
  example: []
  syntax:
    content: public static List<NotificationHistory> GetNotifications()
    return:
      type: System.Collections.Generic.List{Lionk.Notification.NotificationHistory}
      description: The list of notifications saved.
    content.vb: Public Shared Function GetNotifications() As List(Of NotificationHistory)
  overload: Lionk.Notification.NotificationService.GetNotifications*
- uid: Lionk.Notification.NotificationService.GetUnreadNotificationCount
  commentId: M:Lionk.Notification.NotificationService.GetUnreadNotificationCount
  id: GetUnreadNotificationCount
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: GetUnreadNotificationCount()
  nameWithType: NotificationService.GetUnreadNotificationCount()
  fullName: Lionk.Notification.NotificationService.GetUnreadNotificationCount()
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetUnreadNotificationCount
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 138
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Get the unread notifications count.
  example: []
  syntax:
    content: public static int GetUnreadNotificationCount()
    return:
      type: System.Int32
      description: The list of unread notifications.
    content.vb: Public Shared Function GetUnreadNotificationCount() As Integer
  overload: Lionk.Notification.NotificationService.GetUnreadNotificationCount*
- uid: Lionk.Notification.NotificationService.MapNotifierToChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  commentId: M:Lionk.Notification.NotificationService.MapNotifierToChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  id: MapNotifierToChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: MapNotifierToChannel(INotifier, params IChannel[])
  nameWithType: NotificationService.MapNotifierToChannel(INotifier, params IChannel[])
  fullName: Lionk.Notification.NotificationService.MapNotifierToChannel(Lionk.Notification.INotifier, params Lionk.Notification.IChannel[])
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: MapNotifierToChannel
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 153
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: >-
    Map a notifier to a channel and add them to the list of Notifiers and Channels if they are not already in the list.

    If the notifier is already mapped to the channel, the channels will be added if they are not already in the list.
  example: []
  syntax:
    content: public static void MapNotifierToChannel(INotifier notifier, params IChannel[] channels)
    parameters:
    - id: notifier
      type: Lionk.Notification.INotifier
      description: The notifier to map.
    - id: channels
      type: Lionk.Notification.IChannel[]
      description: The list of channels to map.
    content.vb: Public Shared Sub MapNotifierToChannel(notifier As INotifier, ParamArray channels As IChannel())
  overload: Lionk.Notification.NotificationService.MapNotifierToChannel*
  nameWithType.vb: NotificationService.MapNotifierToChannel(INotifier, ParamArray IChannel())
  fullName.vb: Lionk.Notification.NotificationService.MapNotifierToChannel(Lionk.Notification.INotifier, ParamArray Lionk.Notification.IChannel())
  name.vb: MapNotifierToChannel(INotifier, ParamArray IChannel())
- uid: Lionk.Notification.NotificationService.UnmapNotifierFromChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  commentId: M:Lionk.Notification.NotificationService.UnmapNotifierFromChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  id: UnmapNotifierFromChannel(Lionk.Notification.INotifier,Lionk.Notification.IChannel[])
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: UnmapNotifierFromChannel(INotifier, params IChannel[])
  nameWithType: NotificationService.UnmapNotifierFromChannel(INotifier, params IChannel[])
  fullName: Lionk.Notification.NotificationService.UnmapNotifierFromChannel(Lionk.Notification.INotifier, params Lionk.Notification.IChannel[])
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: UnmapNotifierFromChannel
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 180
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: >-
    Unmap a notifier from a list of channels.

    Removes the channels from the list of channels associated with the notifier.
  example: []
  syntax:
    content: public static void UnmapNotifierFromChannel(INotifier notifier, params IChannel[] channels)
    parameters:
    - id: notifier
      type: Lionk.Notification.INotifier
      description: The notifier to unmap.
    - id: channels
      type: Lionk.Notification.IChannel[]
      description: The list of channels to unmap.
    content.vb: Public Shared Sub UnmapNotifierFromChannel(notifier As INotifier, ParamArray channels As IChannel())
  overload: Lionk.Notification.NotificationService.UnmapNotifierFromChannel*
  nameWithType.vb: NotificationService.UnmapNotifierFromChannel(INotifier, ParamArray IChannel())
  fullName.vb: Lionk.Notification.NotificationService.UnmapNotifierFromChannel(Lionk.Notification.INotifier, ParamArray Lionk.Notification.IChannel())
  name.vb: UnmapNotifierFromChannel(INotifier, ParamArray IChannel())
- uid: Lionk.Notification.NotificationService.RemoveChannel(Lionk.Notification.IChannel)
  commentId: M:Lionk.Notification.NotificationService.RemoveChannel(Lionk.Notification.IChannel)
  id: RemoveChannel(Lionk.Notification.IChannel)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: RemoveChannel(IChannel)
  nameWithType: NotificationService.RemoveChannel(IChannel)
  fullName: Lionk.Notification.NotificationService.RemoveChannel(Lionk.Notification.IChannel)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: RemoveChannel
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 198
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: >-
    Methode to remove a channel from the list of channels.

    If the channel is mapped to a notifier, it will be removed from the notifier.
  example: []
  syntax:
    content: public static void RemoveChannel(IChannel channel)
    parameters:
    - id: channel
      type: Lionk.Notification.IChannel
      description: The channel to remove.
    content.vb: Public Shared Sub RemoveChannel(channel As IChannel)
  overload: Lionk.Notification.NotificationService.RemoveChannel*
- uid: Lionk.Notification.NotificationService.RemoveNotifier(Lionk.Notification.INotifier)
  commentId: M:Lionk.Notification.NotificationService.RemoveNotifier(Lionk.Notification.INotifier)
  id: RemoveNotifier(Lionk.Notification.INotifier)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: RemoveNotifier(INotifier)
  nameWithType: NotificationService.RemoveNotifier(INotifier)
  fullName: Lionk.Notification.NotificationService.RemoveNotifier(Lionk.Notification.INotifier)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: RemoveNotifier
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 226
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: >-
    This method removes a

    notifier from the list of notifiers.
  example: []
  syntax:
    content: public static void RemoveNotifier(INotifier notifier)
    parameters:
    - id: notifier
      type: Lionk.Notification.INotifier
      description: The notifier to remove.
    content.vb: Public Shared Sub RemoveNotifier(notifier As INotifier)
  overload: Lionk.Notification.NotificationService.RemoveNotifier*
- uid: Lionk.Notification.NotificationService.SaveNotificationHistory(Lionk.Notification.Notification)
  commentId: M:Lionk.Notification.NotificationService.SaveNotificationHistory(Lionk.Notification.Notification)
  id: SaveNotificationHistory(Lionk.Notification.Notification)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: SaveNotificationHistory(Notification)
  nameWithType: NotificationService.SaveNotificationHistory(Notification)
  fullName: Lionk.Notification.NotificationService.SaveNotificationHistory(Lionk.Notification.Notification)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: SaveNotificationHistory
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 250
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Save a notification in history.
  example: []
  syntax:
    content: public static void SaveNotificationHistory(Notification notification)
    parameters:
    - id: notification
      type: Lionk.Notification.Notification
      description: The notification to save.
    content.vb: Public Shared Sub SaveNotificationHistory(notification As Notification)
  overload: Lionk.Notification.NotificationService.SaveNotificationHistory*
- uid: Lionk.Notification.NotificationService.Send(Lionk.Notification.Notification)
  commentId: M:Lionk.Notification.NotificationService.Send(Lionk.Notification.Notification)
  id: Send(Lionk.Notification.Notification)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: Send(Notification)
  nameWithType: NotificationService.Send(Notification)
  fullName: Lionk.Notification.NotificationService.Send(Lionk.Notification.Notification)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: Send
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 260
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: This method sends a notification and raises the event.
  example: []
  syntax:
    content: public static void Send(Notification notification)
    parameters:
    - id: notification
      type: Lionk.Notification.Notification
      description: the notification to send.
    content.vb: Public Shared Sub Send(notification As Notification)
  overload: Lionk.Notification.NotificationService.Send*
- uid: Lionk.Notification.NotificationService.WhoUseThisChannel(Lionk.Notification.IChannel)
  commentId: M:Lionk.Notification.NotificationService.WhoUseThisChannel(Lionk.Notification.IChannel)
  id: WhoUseThisChannel(Lionk.Notification.IChannel)
  parent: Lionk.Notification.NotificationService
  langs:
  - csharp
  - vb
  name: WhoUseThisChannel(IChannel)
  nameWithType: NotificationService.WhoUseThisChannel(IChannel)
  fullName: Lionk.Notification.NotificationService.WhoUseThisChannel(Lionk.Notification.IChannel)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: WhoUseThisChannel
    path: src/Lib/Lionk.Notification/Model/Classes/NotificationService.cs
    startLine: 281
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification
  summary: Methode that returns the list of notifiers that use a channel.
  example: []
  syntax:
    content: public static List<INotifier> WhoUseThisChannel(IChannel channel)
    parameters:
    - id: channel
      type: Lionk.Notification.IChannel
      description: The channel to check.
    return:
      type: System.Collections.Generic.List{Lionk.Notification.INotifier}
      description: The list of notifiers that use the channel.
    content.vb: Public Shared Function WhoUseThisChannel(channel As IChannel) As List(Of INotifier)
  overload: Lionk.Notification.NotificationService.WhoUseThisChannel*
references:
- uid: Lionk.Notification
  commentId: N:Lionk.Notification
  href: Lionk.html
  name: Lionk.Notification
  nameWithType: Lionk.Notification
  fullName: Lionk.Notification
  spec.csharp:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Notification
    name: Notification
    href: Lionk.Notification.html
  spec.vb:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Notification
    name: Notification
    href: Lionk.Notification.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Lionk.Notification.Event.NotificationEventArgs}
  commentId: T:System.EventHandler{Lionk.Notification.Event.NotificationEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<NotificationEventArgs>
  nameWithType: EventHandler<NotificationEventArgs>
  fullName: System.EventHandler<Lionk.Notification.Event.NotificationEventArgs>
  nameWithType.vb: EventHandler(Of NotificationEventArgs)
  fullName.vb: System.EventHandler(Of Lionk.Notification.Event.NotificationEventArgs)
  name.vb: EventHandler(Of NotificationEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Lionk.Notification.Event.NotificationEventArgs
    name: NotificationEventArgs
    href: Lionk.Notification.Event.NotificationEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Notification.Event.NotificationEventArgs
    name: NotificationEventArgs
    href: Lionk.Notification.Event.NotificationEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Lionk.Notification.NotificationService.Channels*
  commentId: Overload:Lionk.Notification.NotificationService.Channels
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_Channels
  name: Channels
  nameWithType: NotificationService.Channels
  fullName: Lionk.Notification.NotificationService.Channels
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Lionk.Notification.IChannel}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Lionk.Notification.IChannel}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<IChannel>
  nameWithType: ReadOnlyCollection<IChannel>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Lionk.Notification.IChannel>
  nameWithType.vb: ReadOnlyCollection(Of IChannel)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Lionk.Notification.IChannel)
  name.vb: ReadOnlyCollection(Of IChannel)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: Lionk.Notification.IChannel
    name: IChannel
    href: Lionk.Notification.IChannel.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Notification.IChannel
    name: IChannel
    href: Lionk.Notification.IChannel.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: Lionk.Notification.NotificationService.NotifierChannels*
  commentId: Overload:Lionk.Notification.NotificationService.NotifierChannels
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_NotifierChannels
  name: NotifierChannels
  nameWithType: NotificationService.NotifierChannels
  fullName: Lionk.Notification.NotificationService.NotifierChannels
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.Guid,System.Collections.Generic.List{Lionk.Notification.IChannel}}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.Guid,System.Collections.Generic.List{Lionk.Notification.IChannel}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<Guid, List<IChannel>>
  nameWithType: ReadOnlyDictionary<Guid, List<IChannel>>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<System.Guid, System.Collections.Generic.List<Lionk.Notification.IChannel>>
  nameWithType.vb: ReadOnlyDictionary(Of Guid, List(Of IChannel))
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of System.Guid, System.Collections.Generic.List(Of Lionk.Notification.IChannel))
  name.vb: ReadOnlyDictionary(Of Guid, List(Of IChannel))
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Lionk.Notification.IChannel
    name: IChannel
    href: Lionk.Notification.IChannel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Notification.IChannel
    name: IChannel
    href: Lionk.Notification.IChannel.html
  - name: )
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Lionk.Notification.NotificationService.Notifiers*
  commentId: Overload:Lionk.Notification.NotificationService.Notifiers
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_Notifiers
  name: Notifiers
  nameWithType: NotificationService.Notifiers
  fullName: Lionk.Notification.NotificationService.Notifiers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Lionk.Notification.INotifier}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Lionk.Notification.INotifier}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<INotifier>
  nameWithType: ReadOnlyCollection<INotifier>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Lionk.Notification.INotifier>
  nameWithType.vb: ReadOnlyCollection(Of INotifier)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Lionk.Notification.INotifier)
  name.vb: ReadOnlyCollection(Of INotifier)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: Lionk.Notification.INotifier
    name: INotifier
    href: Lionk.Notification.INotifier.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Notification.INotifier
    name: INotifier
    href: Lionk.Notification.INotifier.html
  - name: )
- uid: Lionk.Notification.NotificationService.AddChannels*
  commentId: Overload:Lionk.Notification.NotificationService.AddChannels
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_AddChannels_Lionk_Notification_IChannel___
  name: AddChannels
  nameWithType: NotificationService.AddChannels
  fullName: Lionk.Notification.NotificationService.AddChannels
- uid: Lionk.Notification.IChannel[]
  isExternal: true
  href: Lionk.Notification.IChannel.html
  name: IChannel[]
  nameWithType: IChannel[]
  fullName: Lionk.Notification.IChannel[]
  nameWithType.vb: IChannel()
  fullName.vb: Lionk.Notification.IChannel()
  name.vb: IChannel()
  spec.csharp:
  - uid: Lionk.Notification.IChannel
    name: IChannel
    href: Lionk.Notification.IChannel.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Lionk.Notification.IChannel
    name: IChannel
    href: Lionk.Notification.IChannel.html
  - name: (
  - name: )
- uid: Lionk.Notification.NotificationService.AddNotifiers*
  commentId: Overload:Lionk.Notification.NotificationService.AddNotifiers
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_AddNotifiers_Lionk_Notification_INotifier___
  name: AddNotifiers
  nameWithType: NotificationService.AddNotifiers
  fullName: Lionk.Notification.NotificationService.AddNotifiers
- uid: Lionk.Notification.INotifier[]
  isExternal: true
  href: Lionk.Notification.INotifier.html
  name: INotifier[]
  nameWithType: INotifier[]
  fullName: Lionk.Notification.INotifier[]
  nameWithType.vb: INotifier()
  fullName.vb: Lionk.Notification.INotifier()
  name.vb: INotifier()
  spec.csharp:
  - uid: Lionk.Notification.INotifier
    name: INotifier
    href: Lionk.Notification.INotifier.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Lionk.Notification.INotifier
    name: INotifier
    href: Lionk.Notification.INotifier.html
  - name: (
  - name: )
- uid: Lionk.Notification.NotificationService.EditNotificationHistory*
  commentId: Overload:Lionk.Notification.NotificationService.EditNotificationHistory
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_EditNotificationHistory_Lionk_Notification_NotificationHistory_
  name: EditNotificationHistory
  nameWithType: NotificationService.EditNotificationHistory
  fullName: Lionk.Notification.NotificationService.EditNotificationHistory
- uid: Lionk.Notification.NotificationHistory
  commentId: T:Lionk.Notification.NotificationHistory
  parent: Lionk.Notification
  href: Lionk.Notification.NotificationHistory.html
  name: NotificationHistory
  nameWithType: NotificationHistory
  fullName: Lionk.Notification.NotificationHistory
- uid: Lionk.Notification.NotificationService.GetNotificationByGuid*
  commentId: Overload:Lionk.Notification.NotificationService.GetNotificationByGuid
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_GetNotificationByGuid_System_Guid_
  name: GetNotificationByGuid
  nameWithType: NotificationService.GetNotificationByGuid
  fullName: Lionk.Notification.NotificationService.GetNotificationByGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Lionk.Notification.NotificationService.GetNotifications*
  commentId: Overload:Lionk.Notification.NotificationService.GetNotifications
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_GetNotifications
  name: GetNotifications
  nameWithType: NotificationService.GetNotifications
  fullName: Lionk.Notification.NotificationService.GetNotifications
- uid: System.Collections.Generic.List{Lionk.Notification.NotificationHistory}
  commentId: T:System.Collections.Generic.List{Lionk.Notification.NotificationHistory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<NotificationHistory>
  nameWithType: List<NotificationHistory>
  fullName: System.Collections.Generic.List<Lionk.Notification.NotificationHistory>
  nameWithType.vb: List(Of NotificationHistory)
  fullName.vb: System.Collections.Generic.List(Of Lionk.Notification.NotificationHistory)
  name.vb: List(Of NotificationHistory)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Lionk.Notification.NotificationHistory
    name: NotificationHistory
    href: Lionk.Notification.NotificationHistory.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Notification.NotificationHistory
    name: NotificationHistory
    href: Lionk.Notification.NotificationHistory.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Lionk.Notification.NotificationService.GetUnreadNotificationCount*
  commentId: Overload:Lionk.Notification.NotificationService.GetUnreadNotificationCount
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_GetUnreadNotificationCount
  name: GetUnreadNotificationCount
  nameWithType: NotificationService.GetUnreadNotificationCount
  fullName: Lionk.Notification.NotificationService.GetUnreadNotificationCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Lionk.Notification.NotificationService.MapNotifierToChannel*
  commentId: Overload:Lionk.Notification.NotificationService.MapNotifierToChannel
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_MapNotifierToChannel_Lionk_Notification_INotifier_Lionk_Notification_IChannel___
  name: MapNotifierToChannel
  nameWithType: NotificationService.MapNotifierToChannel
  fullName: Lionk.Notification.NotificationService.MapNotifierToChannel
- uid: Lionk.Notification.INotifier
  commentId: T:Lionk.Notification.INotifier
  parent: Lionk.Notification
  href: Lionk.Notification.INotifier.html
  name: INotifier
  nameWithType: INotifier
  fullName: Lionk.Notification.INotifier
- uid: Lionk.Notification.NotificationService.UnmapNotifierFromChannel*
  commentId: Overload:Lionk.Notification.NotificationService.UnmapNotifierFromChannel
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_UnmapNotifierFromChannel_Lionk_Notification_INotifier_Lionk_Notification_IChannel___
  name: UnmapNotifierFromChannel
  nameWithType: NotificationService.UnmapNotifierFromChannel
  fullName: Lionk.Notification.NotificationService.UnmapNotifierFromChannel
- uid: Lionk.Notification.NotificationService.RemoveChannel*
  commentId: Overload:Lionk.Notification.NotificationService.RemoveChannel
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_RemoveChannel_Lionk_Notification_IChannel_
  name: RemoveChannel
  nameWithType: NotificationService.RemoveChannel
  fullName: Lionk.Notification.NotificationService.RemoveChannel
- uid: Lionk.Notification.IChannel
  commentId: T:Lionk.Notification.IChannel
  parent: Lionk.Notification
  href: Lionk.Notification.IChannel.html
  name: IChannel
  nameWithType: IChannel
  fullName: Lionk.Notification.IChannel
- uid: Lionk.Notification.NotificationService.RemoveNotifier*
  commentId: Overload:Lionk.Notification.NotificationService.RemoveNotifier
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_RemoveNotifier_Lionk_Notification_INotifier_
  name: RemoveNotifier
  nameWithType: NotificationService.RemoveNotifier
  fullName: Lionk.Notification.NotificationService.RemoveNotifier
- uid: Lionk.Notification.NotificationService.SaveNotificationHistory*
  commentId: Overload:Lionk.Notification.NotificationService.SaveNotificationHistory
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_SaveNotificationHistory_Lionk_Notification_Notification_
  name: SaveNotificationHistory
  nameWithType: NotificationService.SaveNotificationHistory
  fullName: Lionk.Notification.NotificationService.SaveNotificationHistory
- uid: Lionk.Notification.Notification
  commentId: T:Lionk.Notification.Notification
  parent: Lionk.Notification
  href: Lionk.Notification.Notification.html
  name: Notification
  nameWithType: Notification
  fullName: Lionk.Notification.Notification
- uid: Lionk.Notification.NotificationService.Send*
  commentId: Overload:Lionk.Notification.NotificationService.Send
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_Send_Lionk_Notification_Notification_
  name: Send
  nameWithType: NotificationService.Send
  fullName: Lionk.Notification.NotificationService.Send
- uid: Lionk.Notification.NotificationService.WhoUseThisChannel*
  commentId: Overload:Lionk.Notification.NotificationService.WhoUseThisChannel
  href: Lionk.Notification.NotificationService.html#Lionk_Notification_NotificationService_WhoUseThisChannel_Lionk_Notification_IChannel_
  name: WhoUseThisChannel
  nameWithType: NotificationService.WhoUseThisChannel
  fullName: Lionk.Notification.NotificationService.WhoUseThisChannel
- uid: System.Collections.Generic.List{Lionk.Notification.INotifier}
  commentId: T:System.Collections.Generic.List{Lionk.Notification.INotifier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<INotifier>
  nameWithType: List<INotifier>
  fullName: System.Collections.Generic.List<Lionk.Notification.INotifier>
  nameWithType.vb: List(Of INotifier)
  fullName.vb: System.Collections.Generic.List(Of Lionk.Notification.INotifier)
  name.vb: List(Of INotifier)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Lionk.Notification.INotifier
    name: INotifier
    href: Lionk.Notification.INotifier.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Notification.INotifier
    name: INotifier
    href: Lionk.Notification.INotifier.html
  - name: )
