### YamlMime:ManagedReference
items:
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter
  commentId: T:Lionk.Notification.Converter.NotificationPropertiesConverter
  id: NotificationPropertiesConverter
  parent: Lionk.Notification.Converter
  children:
  - Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert(System.Type)
  - Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType(System.String)
  - Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: NotificationPropertiesConverter
  nameWithType: NotificationPropertiesConverter
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter
  type: Class
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: NotificationPropertiesConverter
    path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
    startLine: 11
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification.Converter
  summary: This class is used to convert a notifier.
  example: []
  syntax:
    content: 'public class NotificationPropertiesConverter : JsonConverter'
    content.vb: Public Class NotificationPropertiesConverter Inherits JsonConverter
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  inheritedMembers:
  - Newtonsoft.Json.JsonConverter.CanRead
  - Newtonsoft.Json.JsonConverter.CanWrite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert(System.Type)
  commentId: M:Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: Lionk.Notification.Converter.NotificationPropertiesConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: NotificationPropertiesConverter.CanConvert(Type)
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert(System.Type)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: CanConvert
    path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
    startLine: 16
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification.Converter
  summary: Determines whether this instance can convert the specified object type.
  example: []
  syntax:
    content: public override bool CanConvert(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
      description: Type of the object.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance can convert the specified object type; otherwise, <code>false</code>.
    content.vb: Public Overrides Function CanConvert(objectType As Type) As Boolean
  overridden: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  overload: Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert*
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Lionk.Notification.Converter.NotificationPropertiesConverter
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, object?, JsonSerializer)
  nameWithType: NotificationPropertiesConverter.ReadJson(JsonReader, Type, object?, JsonSerializer)
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object?, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: ReadJson
    path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
    startLine: 26
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification.Converter
  summary: Reads the JSON representation of the object.
  example: []
  syntax:
    content: public override object ReadJson(JsonReader reader, Type objectType, object? existingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The <xref href="Newtonsoft.Json.JsonReader" data-throw-if-not-resolved="false"></xref> to read from.
    - id: objectType
      type: System.Type
      description: Type of the object.
    - id: existingValue
      type: System.Object
      description: The existing value of object being read.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    return:
      type: System.Object
      description: The object value.
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
  overridden: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson*
  nameWithType.vb: NotificationPropertiesConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Lionk.Notification.Converter.NotificationPropertiesConverter
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, object?, JsonSerializer)
  nameWithType: NotificationPropertiesConverter.WriteJson(JsonWriter, object?, JsonSerializer)
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson(Newtonsoft.Json.JsonWriter, object?, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: WriteJson
    path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
    startLine: 86
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification.Converter
  summary: Writes the JSON representation of the object.
  example: []
  syntax:
    content: public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The <xref href="Newtonsoft.Json.JsonWriter" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: System.Object
      description: The value.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As Object, serializer As JsonSerializer)
  overridden: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson*
  nameWithType.vb: NotificationPropertiesConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType(System.String)
  commentId: M:Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType(System.String)
  id: GetFullType(System.String)
  parent: Lionk.Notification.Converter.NotificationPropertiesConverter
  langs:
  - csharp
  - vb
  name: GetFullType(string)
  nameWithType: NotificationPropertiesConverter.GetFullType(string)
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType(string)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetFullType
    path: src/Lib/Lionk.Notification/Model/Converter/NotificationPropertiesConverter.cs
    startLine: 124
  assemblies:
  - Lionk.Notification
  namespace: Lionk.Notification.Converter
  summary: Gets the type of the object.
  example: []
  syntax:
    content: protected Type? GetFullType(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: The name of the type.
    return:
      type: System.Type
      description: The type of the object.
    content.vb: Protected Function GetFullType(typeName As String) As Type
  overload: Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType*
  nameWithType.vb: NotificationPropertiesConverter.GetFullType(String)
  fullName.vb: Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType(String)
  name.vb: GetFullType(String)
references:
- uid: Lionk.Notification.Converter
  commentId: N:Lionk.Notification.Converter
  href: Lionk.html
  name: Lionk.Notification.Converter
  nameWithType: Lionk.Notification.Converter
  fullName: Lionk.Notification.Converter
  spec.csharp:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Notification
    name: Notification
    href: Lionk.Notification.html
  - name: .
  - uid: Lionk.Notification.Converter
    name: Converter
    href: Lionk.Notification.Converter.html
  spec.vb:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Notification
    name: Notification
    href: Lionk.Notification.html
  - name: .
  - uid: Lionk.Notification.Converter
    name: Converter
    href: Lionk.Notification.Converter.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  commentId: P:Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  nameWithType: JsonConverter.CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert*
  commentId: Overload:Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert
  href: Lionk.Notification.Converter.NotificationPropertiesConverter.html#Lionk_Notification_Converter_NotificationPropertiesConverter_CanConvert_System_Type_
  name: CanConvert
  nameWithType: NotificationPropertiesConverter.CanConvert
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.CanConvert
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson*
  commentId: Overload:Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson
  href: Lionk.Notification.Converter.NotificationPropertiesConverter.html#Lionk_Notification_Converter_NotificationPropertiesConverter_ReadJson_Newtonsoft_Json_JsonReader_System_Type_System_Object_Newtonsoft_Json_JsonSerializer_
  name: ReadJson
  nameWithType: NotificationPropertiesConverter.ReadJson
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.ReadJson
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson*
  commentId: Overload:Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson
  href: Lionk.Notification.Converter.NotificationPropertiesConverter.html#Lionk_Notification_Converter_NotificationPropertiesConverter_WriteJson_Newtonsoft_Json_JsonWriter_System_Object_Newtonsoft_Json_JsonSerializer_
  name: WriteJson
  nameWithType: NotificationPropertiesConverter.WriteJson
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.WriteJson
- uid: Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType*
  commentId: Overload:Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType
  href: Lionk.Notification.Converter.NotificationPropertiesConverter.html#Lionk_Notification_Converter_NotificationPropertiesConverter_GetFullType_System_String_
  name: GetFullType
  nameWithType: NotificationPropertiesConverter.GetFullType
  fullName: Lionk.Notification.Converter.NotificationPropertiesConverter.GetFullType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
