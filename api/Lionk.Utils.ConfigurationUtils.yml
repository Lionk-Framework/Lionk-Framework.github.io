### YamlMime:ManagedReference
items:
- uid: Lionk.Utils.ConfigurationUtils
  commentId: T:Lionk.Utils.ConfigurationUtils
  id: ConfigurationUtils
  parent: Lionk.Utils
  children:
  - Lionk.Utils.ConfigurationUtils.AppendFile(System.String,System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.CopyFileToFolder(System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.DeleteFile(System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.FileExists(System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.GetFolderPath(Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.ReadFile(System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.SaveFile(System.String,System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.SaveFileAsync(System.String,System.String,Lionk.Utils.FolderType)
  - Lionk.Utils.ConfigurationUtils.TryDeleteFile(System.String,Lionk.Utils.FolderType)
  langs:
  - csharp
  - vb
  name: ConfigurationUtils
  nameWithType: ConfigurationUtils
  fullName: Lionk.Utils.ConfigurationUtils
  type: Class
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: ConfigurationUtils
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 7
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Static class that contains utility methods for save files.
  example: []
  syntax:
    content: public static class ConfigurationUtils
    content.vb: Public Module ConfigurationUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lionk.Utils.ConfigurationUtils.AppendFile(System.String,System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.AppendFile(System.String,System.String,Lionk.Utils.FolderType)
  id: AppendFile(System.String,System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: AppendFile(string, string, FolderType)
  nameWithType: ConfigurationUtils.AppendFile(string, string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.AppendFile(string, string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: AppendFile
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 73
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Appends content to a file. If the file does not exist, it will be created.
  example: []
  syntax:
    content: public static void AppendFile(string filename, string content, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: content
      type: System.String
      description: The content to append.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    content.vb: Public Shared Sub AppendFile(filename As String, content As String, folderType As FolderType)
  overload: Lionk.Utils.ConfigurationUtils.AppendFile*
  nameWithType.vb: ConfigurationUtils.AppendFile(String, String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.AppendFile(String, String, Lionk.Utils.FolderType)
  name.vb: AppendFile(String, String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.CopyFileToFolder(System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.CopyFileToFolder(System.String,Lionk.Utils.FolderType)
  id: CopyFileToFolder(System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: CopyFileToFolder(string, FolderType)
  nameWithType: ConfigurationUtils.CopyFileToFolder(string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.CopyFileToFolder(string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: CopyFileToFolder
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 84
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Method to copy a file to a folder.
  example: []
  syntax:
    content: public static void CopyFileToFolder(string sourcePath, FolderType folderType)
    parameters:
    - id: sourcePath
      type: System.String
      description: The source file path.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    content.vb: Public Shared Sub CopyFileToFolder(sourcePath As String, folderType As FolderType)
  overload: Lionk.Utils.ConfigurationUtils.CopyFileToFolder*
  nameWithType.vb: ConfigurationUtils.CopyFileToFolder(String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.CopyFileToFolder(String, Lionk.Utils.FolderType)
  name.vb: CopyFileToFolder(String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.DeleteFile(System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.DeleteFile(System.String,Lionk.Utils.FolderType)
  id: DeleteFile(System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: DeleteFile(string, FolderType)
  nameWithType: ConfigurationUtils.DeleteFile(string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.DeleteFile(string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: DeleteFile
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 101
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Deletes a file.
  example: []
  syntax:
    content: public static void DeleteFile(string filename, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    content.vb: Public Shared Sub DeleteFile(filename As String, folderType As FolderType)
  overload: Lionk.Utils.ConfigurationUtils.DeleteFile*
  nameWithType.vb: ConfigurationUtils.DeleteFile(String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.DeleteFile(String, Lionk.Utils.FolderType)
  name.vb: DeleteFile(String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.FileExists(System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.FileExists(System.String,Lionk.Utils.FolderType)
  id: FileExists(System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: FileExists(string, FolderType)
  nameWithType: ConfigurationUtils.FileExists(string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.FileExists(string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: FileExists
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 113
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Checks if a file exists.
  example: []
  syntax:
    content: public static bool FileExists(string filename, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folderType.
    return:
      type: System.Boolean
      description: True if it exists, false otherwise.
    content.vb: Public Shared Function FileExists(filename As String, folderType As FolderType) As Boolean
  overload: Lionk.Utils.ConfigurationUtils.FileExists*
  nameWithType.vb: ConfigurationUtils.FileExists(String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.FileExists(String, Lionk.Utils.FolderType)
  name.vb: FileExists(String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.GetFolderPath(Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.GetFolderPath(Lionk.Utils.FolderType)
  id: GetFolderPath(Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: GetFolderPath(FolderType)
  nameWithType: ConfigurationUtils.GetFolderPath(FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.GetFolderPath(Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetFolderPath
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 124
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Gets the folder path for the specified folder type.
  example: []
  syntax:
    content: public static string GetFolderPath(FolderType folderType)
    parameters:
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    return:
      type: System.String
      description: The path.
    content.vb: Public Shared Function GetFolderPath(folderType As FolderType) As String
  overload: Lionk.Utils.ConfigurationUtils.GetFolderPath*
- uid: Lionk.Utils.ConfigurationUtils.ReadFile(System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.ReadFile(System.String,Lionk.Utils.FolderType)
  id: ReadFile(System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: ReadFile(string, FolderType)
  nameWithType: ConfigurationUtils.ReadFile(string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.ReadFile(string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: ReadFile
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 132
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Reads content from a file.
  example: []
  syntax:
    content: public static string ReadFile(string filename, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    return:
      type: System.String
      description: The content of the file.
    content.vb: Public Shared Function ReadFile(filename As String, folderType As FolderType) As String
  overload: Lionk.Utils.ConfigurationUtils.ReadFile*
  nameWithType.vb: ConfigurationUtils.ReadFile(String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.ReadFile(String, Lionk.Utils.FolderType)
  name.vb: ReadFile(String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.SaveFile(System.String,System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.SaveFile(System.String,System.String,Lionk.Utils.FolderType)
  id: SaveFile(System.String,System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: SaveFile(string, string, FolderType)
  nameWithType: ConfigurationUtils.SaveFile(string, string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.SaveFile(string, string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: SaveFile
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 145
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: >-
    Saves a file with the specified content.

    If the file already exists, it will be overwritten.
  example: []
  syntax:
    content: public static void SaveFile(string filename, string content, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: content
      type: System.String
      description: The content to save.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    content.vb: Public Shared Sub SaveFile(filename As String, content As String, folderType As FolderType)
  overload: Lionk.Utils.ConfigurationUtils.SaveFile*
  nameWithType.vb: ConfigurationUtils.SaveFile(String, String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.SaveFile(String, String, Lionk.Utils.FolderType)
  name.vb: SaveFile(String, String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.SaveFileAsync(System.String,System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.SaveFileAsync(System.String,System.String,Lionk.Utils.FolderType)
  id: SaveFileAsync(System.String,System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: SaveFileAsync(string, string, FolderType)
  nameWithType: ConfigurationUtils.SaveFileAsync(string, string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.SaveFileAsync(string, string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: SaveFileAsync
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 159
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: >-
    Saves a file with the specified content.

    If the file already exists, it will be overwritten.
  example: []
  syntax:
    content: public static Task SaveFileAsync(string filename, string content, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: content
      type: System.String
      description: The content to save.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    return:
      type: System.Threading.Tasks.Task
      description: A task.
    content.vb: Public Shared Function SaveFileAsync(filename As String, content As String, folderType As FolderType) As Task
  overload: Lionk.Utils.ConfigurationUtils.SaveFileAsync*
  nameWithType.vb: ConfigurationUtils.SaveFileAsync(String, String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.SaveFileAsync(String, String, Lionk.Utils.FolderType)
  name.vb: SaveFileAsync(String, String, FolderType)
- uid: Lionk.Utils.ConfigurationUtils.TryDeleteFile(System.String,Lionk.Utils.FolderType)
  commentId: M:Lionk.Utils.ConfigurationUtils.TryDeleteFile(System.String,Lionk.Utils.FolderType)
  id: TryDeleteFile(System.String,Lionk.Utils.FolderType)
  parent: Lionk.Utils.ConfigurationUtils
  langs:
  - csharp
  - vb
  name: TryDeleteFile(string, FolderType)
  nameWithType: ConfigurationUtils.TryDeleteFile(string, FolderType)
  fullName: Lionk.Utils.ConfigurationUtils.TryDeleteFile(string, Lionk.Utils.FolderType)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: TryDeleteFile
    path: src/Lib/Lionk.Utils/Utils/ConfigurationUtils.cs
    startLine: 171
  assemblies:
  - Lionk.Utils
  namespace: Lionk.Utils
  summary: Tries to delete a file.
  example: []
  syntax:
    content: public static bool TryDeleteFile(string filename, FolderType folderType)
    parameters:
    - id: filename
      type: System.String
      description: The filename.
    - id: folderType
      type: Lionk.Utils.FolderType
      description: The folder type.
    return:
      type: System.Boolean
      description: True if the file is deleted, false otherwise.
    content.vb: Public Shared Function TryDeleteFile(filename As String, folderType As FolderType) As Boolean
  overload: Lionk.Utils.ConfigurationUtils.TryDeleteFile*
  nameWithType.vb: ConfigurationUtils.TryDeleteFile(String, FolderType)
  fullName.vb: Lionk.Utils.ConfigurationUtils.TryDeleteFile(String, Lionk.Utils.FolderType)
  name.vb: TryDeleteFile(String, FolderType)
references:
- uid: Lionk.Utils
  commentId: N:Lionk.Utils
  href: Lionk.html
  name: Lionk.Utils
  nameWithType: Lionk.Utils
  fullName: Lionk.Utils
  spec.csharp:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Utils
    name: Utils
    href: Lionk.Utils.html
  spec.vb:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Utils
    name: Utils
    href: Lionk.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Lionk.Utils.ConfigurationUtils.AppendFile*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.AppendFile
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_AppendFile_System_String_System_String_Lionk_Utils_FolderType_
  name: AppendFile
  nameWithType: ConfigurationUtils.AppendFile
  fullName: Lionk.Utils.ConfigurationUtils.AppendFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Lionk.Utils.FolderType
  commentId: T:Lionk.Utils.FolderType
  parent: Lionk.Utils
  href: Lionk.Utils.FolderType.html
  name: FolderType
  nameWithType: FolderType
  fullName: Lionk.Utils.FolderType
- uid: Lionk.Utils.ConfigurationUtils.CopyFileToFolder*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.CopyFileToFolder
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_CopyFileToFolder_System_String_Lionk_Utils_FolderType_
  name: CopyFileToFolder
  nameWithType: ConfigurationUtils.CopyFileToFolder
  fullName: Lionk.Utils.ConfigurationUtils.CopyFileToFolder
- uid: Lionk.Utils.ConfigurationUtils.DeleteFile*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.DeleteFile
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_DeleteFile_System_String_Lionk_Utils_FolderType_
  name: DeleteFile
  nameWithType: ConfigurationUtils.DeleteFile
  fullName: Lionk.Utils.ConfigurationUtils.DeleteFile
- uid: Lionk.Utils.ConfigurationUtils.FileExists*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.FileExists
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_FileExists_System_String_Lionk_Utils_FolderType_
  name: FileExists
  nameWithType: ConfigurationUtils.FileExists
  fullName: Lionk.Utils.ConfigurationUtils.FileExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Lionk.Utils.ConfigurationUtils.GetFolderPath*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.GetFolderPath
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_GetFolderPath_Lionk_Utils_FolderType_
  name: GetFolderPath
  nameWithType: ConfigurationUtils.GetFolderPath
  fullName: Lionk.Utils.ConfigurationUtils.GetFolderPath
- uid: Lionk.Utils.ConfigurationUtils.ReadFile*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.ReadFile
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_ReadFile_System_String_Lionk_Utils_FolderType_
  name: ReadFile
  nameWithType: ConfigurationUtils.ReadFile
  fullName: Lionk.Utils.ConfigurationUtils.ReadFile
- uid: Lionk.Utils.ConfigurationUtils.SaveFile*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.SaveFile
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_SaveFile_System_String_System_String_Lionk_Utils_FolderType_
  name: SaveFile
  nameWithType: ConfigurationUtils.SaveFile
  fullName: Lionk.Utils.ConfigurationUtils.SaveFile
- uid: Lionk.Utils.ConfigurationUtils.SaveFileAsync*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.SaveFileAsync
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_SaveFileAsync_System_String_System_String_Lionk_Utils_FolderType_
  name: SaveFileAsync
  nameWithType: ConfigurationUtils.SaveFileAsync
  fullName: Lionk.Utils.ConfigurationUtils.SaveFileAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Lionk.Utils.ConfigurationUtils.TryDeleteFile*
  commentId: Overload:Lionk.Utils.ConfigurationUtils.TryDeleteFile
  href: Lionk.Utils.ConfigurationUtils.html#Lionk_Utils_ConfigurationUtils_TryDeleteFile_System_String_Lionk_Utils_FolderType_
  name: TryDeleteFile
  nameWithType: ConfigurationUtils.TryDeleteFile
  fullName: Lionk.Utils.ConfigurationUtils.TryDeleteFile
