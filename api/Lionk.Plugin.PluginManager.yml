### YamlMime:ManagedReference
items:
- uid: Lionk.Plugin.PluginManager
  commentId: T:Lionk.Plugin.PluginManager
  id: PluginManager
  parent: Lionk.Plugin
  children:
  - Lionk.Plugin.PluginManager.#ctor
  - Lionk.Plugin.PluginManager.AddPlugin(System.String)
  - Lionk.Plugin.PluginManager.DoNeedARestart
  - Lionk.Plugin.PluginManager.GetAllPlugins
  - Lionk.Plugin.PluginManager.GetTypes
  - Lionk.Plugin.PluginManager.NewTypesAvailable
  - Lionk.Plugin.PluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  langs:
  - csharp
  - vb
  name: PluginManager
  nameWithType: PluginManager
  fullName: Lionk.Plugin.PluginManager
  type: Class
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: PluginManager
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 13
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Class which allows to manage plugins.
  example: []
  syntax:
    content: 'public class PluginManager : IPluginManager, ITypesProvider'
    content.vb: Public Class PluginManager Implements IPluginManager, ITypesProvider
  inheritance:
  - System.Object
  implements:
  - Lionk.Plugin.IPluginManager
  - Lionk.Core.TypeRegister.ITypesProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lionk.Plugin.PluginManager.#ctor
  commentId: M:Lionk.Plugin.PluginManager.#ctor
  id: '#ctor'
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: PluginManager()
  nameWithType: PluginManager.PluginManager()
  fullName: Lionk.Plugin.PluginManager.PluginManager()
  type: Constructor
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: .ctor
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 34
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Initializes a new instance of the <xref href="Lionk.Plugin.PluginManager" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public PluginManager()
    content.vb: Public Sub New()
  overload: Lionk.Plugin.PluginManager.#ctor*
  nameWithType.vb: PluginManager.New()
  fullName.vb: Lionk.Plugin.PluginManager.New()
  name.vb: New()
- uid: Lionk.Plugin.PluginManager.NewTypesAvailable
  commentId: E:Lionk.Plugin.PluginManager.NewTypesAvailable
  id: NewTypesAvailable
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: NewTypesAvailable
  nameWithType: PluginManager.NewTypesAvailable
  fullName: Lionk.Plugin.PluginManager.NewTypesAvailable
  type: Event
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: NewTypesAvailable
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 41
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Event raised when a new type is available.
  example: []
  syntax:
    content: public event EventHandler<TypesEventArgs>? NewTypesAvailable
    return:
      type: System.EventHandler{Lionk.Core.TypeRegister.TypesEventArgs}
    content.vb: Public Event NewTypesAvailable As EventHandler(Of TypesEventArgs)
  implements:
  - Lionk.Core.TypeRegister.ITypesProvider.NewTypesAvailable
- uid: Lionk.Plugin.PluginManager.AddPlugin(System.String)
  commentId: M:Lionk.Plugin.PluginManager.AddPlugin(System.String)
  id: AddPlugin(System.String)
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: AddPlugin(string)
  nameWithType: PluginManager.AddPlugin(string)
  fullName: Lionk.Plugin.PluginManager.AddPlugin(string)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: AddPlugin
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 48
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Adds a plugin to the manager.
  example: []
  syntax:
    content: public void AddPlugin(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the plugin.
    content.vb: Public Sub AddPlugin(path As String)
  overload: Lionk.Plugin.PluginManager.AddPlugin*
  implements:
  - Lionk.Plugin.IPluginManager.AddPlugin(System.String)
  nameWithType.vb: PluginManager.AddPlugin(String)
  fullName.vb: Lionk.Plugin.PluginManager.AddPlugin(String)
  name.vb: AddPlugin(String)
- uid: Lionk.Plugin.PluginManager.DoNeedARestart
  commentId: M:Lionk.Plugin.PluginManager.DoNeedARestart
  id: DoNeedARestart
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: DoNeedARestart()
  nameWithType: PluginManager.DoNeedARestart()
  fullName: Lionk.Plugin.PluginManager.DoNeedARestart()
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: DoNeedARestart
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 72
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Gets a boolean indicating if a restart is needed.
  example: []
  syntax:
    content: public bool DoNeedARestart()
    return:
      type: System.Boolean
      description: True if the application must be restarted false otherwise.
    content.vb: Public Function DoNeedARestart() As Boolean
  overload: Lionk.Plugin.PluginManager.DoNeedARestart*
  implements:
  - Lionk.Plugin.IPluginManager.DoNeedARestart
- uid: Lionk.Plugin.PluginManager.GetAllPlugins
  commentId: M:Lionk.Plugin.PluginManager.GetAllPlugins
  id: GetAllPlugins
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: GetAllPlugins()
  nameWithType: PluginManager.GetAllPlugins()
  fullName: Lionk.Plugin.PluginManager.GetAllPlugins()
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetAllPlugins
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 75
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Gets all loaded plugins.
  example: []
  syntax:
    content: public IEnumerable<Plugin> GetAllPlugins()
    return:
      type: System.Collections.Generic.IEnumerable{Lionk.Plugin.Plugin}
      description: A collection of loaded plugins.
    content.vb: Public Function GetAllPlugins() As IEnumerable(Of Plugin)
  overload: Lionk.Plugin.PluginManager.GetAllPlugins*
  implements:
  - Lionk.Plugin.IPluginManager.GetAllPlugins
- uid: Lionk.Plugin.PluginManager.GetTypes
  commentId: M:Lionk.Plugin.PluginManager.GetTypes
  id: GetTypes
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: GetTypes()
  nameWithType: PluginManager.GetTypes()
  fullName: Lionk.Plugin.PluginManager.GetTypes()
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: GetTypes
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 78
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: Gets all types from the provider.
  example: []
  syntax:
    content: public IEnumerable<Type> GetTypes()
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: A collection of types.
    content.vb: Public Function GetTypes() As IEnumerable(Of Type)
  overload: Lionk.Plugin.PluginManager.GetTypes*
  implements:
  - Lionk.Core.TypeRegister.ITypesProvider.GetTypes
- uid: Lionk.Plugin.PluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  commentId: M:Lionk.Plugin.PluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  id: RemovePlugin(Lionk.Plugin.Plugin)
  parent: Lionk.Plugin.PluginManager
  langs:
  - csharp
  - vb
  name: RemovePlugin(Plugin)
  nameWithType: PluginManager.RemovePlugin(Plugin)
  fullName: Lionk.Plugin.PluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  type: Method
  source:
    remote:
      path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
      branch: api-documentation
      repo: git@github.com:Lionk-Framework/Lionk.git
    id: RemovePlugin
    path: src/Lib/Lionk.Plugin/Model/PluginManager.cs
    startLine: 96
  assemblies:
  - Lionk.Plugin
  namespace: Lionk.Plugin
  summary: >-
    Removes the specified plugin from the manager.

    As an assembly can't be removed during execution,

    the plugin will be disabled only after a re-run.
  example: []
  syntax:
    content: public void RemovePlugin(Plugin plugin)
    parameters:
    - id: plugin
      type: Lionk.Plugin.Plugin
      description: The plugin to remove.
    content.vb: Public Sub RemovePlugin(plugin As Plugin)
  overload: Lionk.Plugin.PluginManager.RemovePlugin*
  implements:
  - Lionk.Plugin.IPluginManager.RemovePlugin(Lionk.Plugin.Plugin)
references:
- uid: Lionk.Plugin
  commentId: N:Lionk.Plugin
  href: Lionk.html
  name: Lionk.Plugin
  nameWithType: Lionk.Plugin
  fullName: Lionk.Plugin
  spec.csharp:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Plugin
    name: Plugin
    href: Lionk.Plugin.html
  spec.vb:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Plugin
    name: Plugin
    href: Lionk.Plugin.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Lionk.Plugin.IPluginManager
  commentId: T:Lionk.Plugin.IPluginManager
  parent: Lionk.Plugin
  href: Lionk.Plugin.IPluginManager.html
  name: IPluginManager
  nameWithType: IPluginManager
  fullName: Lionk.Plugin.IPluginManager
- uid: Lionk.Core.TypeRegister.ITypesProvider
  commentId: T:Lionk.Core.TypeRegister.ITypesProvider
  parent: Lionk.Core.TypeRegister
  href: Lionk.Core.TypeRegister.ITypesProvider.html
  name: ITypesProvider
  nameWithType: ITypesProvider
  fullName: Lionk.Core.TypeRegister.ITypesProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Lionk.Core.TypeRegister
  commentId: N:Lionk.Core.TypeRegister
  href: Lionk.html
  name: Lionk.Core.TypeRegister
  nameWithType: Lionk.Core.TypeRegister
  fullName: Lionk.Core.TypeRegister
  spec.csharp:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Core
    name: Core
    href: Lionk.Core.html
  - name: .
  - uid: Lionk.Core.TypeRegister
    name: TypeRegister
    href: Lionk.Core.TypeRegister.html
  spec.vb:
  - uid: Lionk
    name: Lionk
    href: Lionk.html
  - name: .
  - uid: Lionk.Core
    name: Core
    href: Lionk.Core.html
  - name: .
  - uid: Lionk.Core.TypeRegister
    name: TypeRegister
    href: Lionk.Core.TypeRegister.html
- uid: Lionk.Plugin.PluginManager
  commentId: T:Lionk.Plugin.PluginManager
  href: Lionk.Plugin.PluginManager.html
  name: PluginManager
  nameWithType: PluginManager
  fullName: Lionk.Plugin.PluginManager
- uid: Lionk.Plugin.PluginManager.#ctor*
  commentId: Overload:Lionk.Plugin.PluginManager.#ctor
  href: Lionk.Plugin.PluginManager.html#Lionk_Plugin_PluginManager__ctor
  name: PluginManager
  nameWithType: PluginManager.PluginManager
  fullName: Lionk.Plugin.PluginManager.PluginManager
  nameWithType.vb: PluginManager.New
  fullName.vb: Lionk.Plugin.PluginManager.New
  name.vb: New
- uid: Lionk.Core.TypeRegister.ITypesProvider.NewTypesAvailable
  commentId: E:Lionk.Core.TypeRegister.ITypesProvider.NewTypesAvailable
  parent: Lionk.Core.TypeRegister.ITypesProvider
  href: Lionk.Core.TypeRegister.ITypesProvider.html#Lionk_Core_TypeRegister_ITypesProvider_NewTypesAvailable
  name: NewTypesAvailable
  nameWithType: ITypesProvider.NewTypesAvailable
  fullName: Lionk.Core.TypeRegister.ITypesProvider.NewTypesAvailable
- uid: System.EventHandler{Lionk.Core.TypeRegister.TypesEventArgs}
  commentId: T:System.EventHandler{Lionk.Core.TypeRegister.TypesEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TypesEventArgs>
  nameWithType: EventHandler<TypesEventArgs>
  fullName: System.EventHandler<Lionk.Core.TypeRegister.TypesEventArgs>
  nameWithType.vb: EventHandler(Of TypesEventArgs)
  fullName.vb: System.EventHandler(Of Lionk.Core.TypeRegister.TypesEventArgs)
  name.vb: EventHandler(Of TypesEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Lionk.Core.TypeRegister.TypesEventArgs
    name: TypesEventArgs
    href: Lionk.Core.TypeRegister.TypesEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Core.TypeRegister.TypesEventArgs
    name: TypesEventArgs
    href: Lionk.Core.TypeRegister.TypesEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Lionk.Plugin.PluginManager.AddPlugin*
  commentId: Overload:Lionk.Plugin.PluginManager.AddPlugin
  href: Lionk.Plugin.PluginManager.html#Lionk_Plugin_PluginManager_AddPlugin_System_String_
  name: AddPlugin
  nameWithType: PluginManager.AddPlugin
  fullName: Lionk.Plugin.PluginManager.AddPlugin
- uid: Lionk.Plugin.IPluginManager.AddPlugin(System.String)
  commentId: M:Lionk.Plugin.IPluginManager.AddPlugin(System.String)
  parent: Lionk.Plugin.IPluginManager
  isExternal: true
  href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_AddPlugin_System_String_
  name: AddPlugin(string)
  nameWithType: IPluginManager.AddPlugin(string)
  fullName: Lionk.Plugin.IPluginManager.AddPlugin(string)
  nameWithType.vb: IPluginManager.AddPlugin(String)
  fullName.vb: Lionk.Plugin.IPluginManager.AddPlugin(String)
  name.vb: AddPlugin(String)
  spec.csharp:
  - uid: Lionk.Plugin.IPluginManager.AddPlugin(System.String)
    name: AddPlugin
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_AddPlugin_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Lionk.Plugin.IPluginManager.AddPlugin(System.String)
    name: AddPlugin
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_AddPlugin_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Lionk.Plugin.PluginManager.DoNeedARestart*
  commentId: Overload:Lionk.Plugin.PluginManager.DoNeedARestart
  href: Lionk.Plugin.PluginManager.html#Lionk_Plugin_PluginManager_DoNeedARestart
  name: DoNeedARestart
  nameWithType: PluginManager.DoNeedARestart
  fullName: Lionk.Plugin.PluginManager.DoNeedARestart
- uid: Lionk.Plugin.IPluginManager.DoNeedARestart
  commentId: M:Lionk.Plugin.IPluginManager.DoNeedARestart
  parent: Lionk.Plugin.IPluginManager
  href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_DoNeedARestart
  name: DoNeedARestart()
  nameWithType: IPluginManager.DoNeedARestart()
  fullName: Lionk.Plugin.IPluginManager.DoNeedARestart()
  spec.csharp:
  - uid: Lionk.Plugin.IPluginManager.DoNeedARestart
    name: DoNeedARestart
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_DoNeedARestart
  - name: (
  - name: )
  spec.vb:
  - uid: Lionk.Plugin.IPluginManager.DoNeedARestart
    name: DoNeedARestart
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_DoNeedARestart
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Lionk.Plugin.PluginManager.GetAllPlugins*
  commentId: Overload:Lionk.Plugin.PluginManager.GetAllPlugins
  href: Lionk.Plugin.PluginManager.html#Lionk_Plugin_PluginManager_GetAllPlugins
  name: GetAllPlugins
  nameWithType: PluginManager.GetAllPlugins
  fullName: Lionk.Plugin.PluginManager.GetAllPlugins
- uid: Lionk.Plugin.IPluginManager.GetAllPlugins
  commentId: M:Lionk.Plugin.IPluginManager.GetAllPlugins
  parent: Lionk.Plugin.IPluginManager
  href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_GetAllPlugins
  name: GetAllPlugins()
  nameWithType: IPluginManager.GetAllPlugins()
  fullName: Lionk.Plugin.IPluginManager.GetAllPlugins()
  spec.csharp:
  - uid: Lionk.Plugin.IPluginManager.GetAllPlugins
    name: GetAllPlugins
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_GetAllPlugins
  - name: (
  - name: )
  spec.vb:
  - uid: Lionk.Plugin.IPluginManager.GetAllPlugins
    name: GetAllPlugins
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_GetAllPlugins
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{Lionk.Plugin.Plugin}
  commentId: T:System.Collections.Generic.IEnumerable{Lionk.Plugin.Plugin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Plugin>
  nameWithType: IEnumerable<Plugin>
  fullName: System.Collections.Generic.IEnumerable<Lionk.Plugin.Plugin>
  nameWithType.vb: IEnumerable(Of Plugin)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Lionk.Plugin.Plugin)
  name.vb: IEnumerable(Of Plugin)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Lionk.Plugin.Plugin
    name: Plugin
    href: Lionk.Plugin.Plugin.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lionk.Plugin.Plugin
    name: Plugin
    href: Lionk.Plugin.Plugin.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Lionk.Plugin.PluginManager.GetTypes*
  commentId: Overload:Lionk.Plugin.PluginManager.GetTypes
  href: Lionk.Plugin.PluginManager.html#Lionk_Plugin_PluginManager_GetTypes
  name: GetTypes
  nameWithType: PluginManager.GetTypes
  fullName: Lionk.Plugin.PluginManager.GetTypes
- uid: Lionk.Core.TypeRegister.ITypesProvider.GetTypes
  commentId: M:Lionk.Core.TypeRegister.ITypesProvider.GetTypes
  parent: Lionk.Core.TypeRegister.ITypesProvider
  href: Lionk.Core.TypeRegister.ITypesProvider.html#Lionk_Core_TypeRegister_ITypesProvider_GetTypes
  name: GetTypes()
  nameWithType: ITypesProvider.GetTypes()
  fullName: Lionk.Core.TypeRegister.ITypesProvider.GetTypes()
  spec.csharp:
  - uid: Lionk.Core.TypeRegister.ITypesProvider.GetTypes
    name: GetTypes
    href: Lionk.Core.TypeRegister.ITypesProvider.html#Lionk_Core_TypeRegister_ITypesProvider_GetTypes
  - name: (
  - name: )
  spec.vb:
  - uid: Lionk.Core.TypeRegister.ITypesProvider.GetTypes
    name: GetTypes
    href: Lionk.Core.TypeRegister.ITypesProvider.html#Lionk_Core_TypeRegister_ITypesProvider_GetTypes
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Lionk.Plugin.PluginManager.RemovePlugin*
  commentId: Overload:Lionk.Plugin.PluginManager.RemovePlugin
  href: Lionk.Plugin.PluginManager.html#Lionk_Plugin_PluginManager_RemovePlugin_Lionk_Plugin_Plugin_
  name: RemovePlugin
  nameWithType: PluginManager.RemovePlugin
  fullName: Lionk.Plugin.PluginManager.RemovePlugin
- uid: Lionk.Plugin.IPluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  commentId: M:Lionk.Plugin.IPluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  parent: Lionk.Plugin.IPluginManager
  href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_RemovePlugin_Lionk_Plugin_Plugin_
  name: RemovePlugin(Plugin)
  nameWithType: IPluginManager.RemovePlugin(Plugin)
  fullName: Lionk.Plugin.IPluginManager.RemovePlugin(Lionk.Plugin.Plugin)
  spec.csharp:
  - uid: Lionk.Plugin.IPluginManager.RemovePlugin(Lionk.Plugin.Plugin)
    name: RemovePlugin
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_RemovePlugin_Lionk_Plugin_Plugin_
  - name: (
  - uid: Lionk.Plugin.Plugin
    name: Plugin
    href: Lionk.Plugin.Plugin.html
  - name: )
  spec.vb:
  - uid: Lionk.Plugin.IPluginManager.RemovePlugin(Lionk.Plugin.Plugin)
    name: RemovePlugin
    href: Lionk.Plugin.IPluginManager.html#Lionk_Plugin_IPluginManager_RemovePlugin_Lionk_Plugin_Plugin_
  - name: (
  - uid: Lionk.Plugin.Plugin
    name: Plugin
    href: Lionk.Plugin.Plugin.html
  - name: )
- uid: Lionk.Plugin.Plugin
  commentId: T:Lionk.Plugin.Plugin
  parent: Lionk.Plugin
  href: Lionk.Plugin.Plugin.html
  name: Plugin
  nameWithType: Plugin
  fullName: Lionk.Plugin.Plugin
